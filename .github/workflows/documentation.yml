name: Documentation Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'scripts/validate-docs-links.js'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'scripts/validate-docs-links.js'

jobs:
  validate-documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Validate documentation links
      run: |
        echo "üîç Validating documentation links..."
        node scripts/validate-docs-links.js
        
    - name: Test documentation navigation
      run: |
        echo "üß≠ Testing documentation navigation..."
        node scripts/test-docs-navigation.js
        
    - name: Check documentation structure
      run: |
        echo "üìÅ Checking documentation structure..."
        
        # Verify main documentation directories exist (archive ignored)
        test -d docs || (echo "‚ùå /docs directory missing" && exit 1)
        test -d docs/00-Overview || (echo "‚ùå /docs/00-Overview missing" && exit 1)
        test -d docs/01-Getting-Started || (echo "‚ùå /docs/01-Getting-Started missing" && exit 1)
        test -d docs/02-Architecture || (echo "‚ùå /docs/02-Architecture missing" && exit 1)
        test -d docs/03-Frontend || (echo "‚ùå /docs/03-Frontend missing" && exit 1)
        test -d docs/04-Backend || (echo "‚ùå /docs/04-Backend missing" && exit 1)
        test -d docs/06-Guides || (echo "‚ùå /docs/06-Guides missing" && exit 1)
        test -d docs/07-Standards || (echo "‚ùå /docs/07-Standards missing" && exit 1)
        test -d docs/08-Contribution || (echo "‚ùå /docs/08-Contribution missing" && exit 1)
        test -d docs/09-Reports-and-History || (echo "‚ùå /docs/09-Reports-and-History missing" && exit 1)
        
        # Verify key documentation files exist (archive ignored)
        test -f docs/README.md || (echo "‚ùå Documentation index missing" && exit 1)
        test -f docs/02-Architecture/architecture.md || (echo "‚ùå Architecture overview missing" && exit 1)
        test -f docs/04-Backend/api-reference.md || (echo "‚ùå Backend API reference missing" && exit 1)
        test -f docs/06-Guides/development-guide.md || (echo "‚ùå Development guide missing" && exit 1)
        test -f docs/09-Reports-and-History/project-status.md || (echo "‚ùå Project status missing" && exit 1)
        
        echo "‚úÖ Documentation structure validation passed"
        
    - name: Check for duplicate content (archive ignored)
      run: |
        echo "üîç Checking for duplicate content..."
        
        # Example duplicate topic check: warn if too many OAuth guides outside 06-Guides (exclude archive)
        oauth_files=$(find docs -path "docs/archive" -prune -o -name "*.md" -print | xargs grep -l "OAuth" | grep -v "docs/06-Guides/oauth-security-guide.md" | wc -l)
        if [ "$oauth_files" -gt 5 ]; then
          echo "‚ö†Ô∏è  Warning: Multiple OAuth-related documents found outside 06-Guides/ (archive ignored)"
          find docs -path "docs/archive" -prune -o -name "*.md" -print | xargs grep -l "OAuth" | grep -v "docs/06-Guides/oauth-security-guide.md" || true
        fi
        
        echo "‚úÖ Duplicate content check completed"
        
    - name: Validate markdown formatting (archive ignored)
      run: |
        echo "üìù Validating markdown formatting..."
        
        # Check for consistent heading structure (exclude archive)
        find docs -path "docs/archive" -prune -o -name "*.md" -print | xargs grep -H "^#" | while read line; do
          file=$(echo "$line" | cut -d: -f1)
          heading=$(echo "$line" | cut -d: -f2-)
          
          # Check for proper heading hierarchy (no skipping levels)
          if echo "$heading" | grep -q "^####"; then
            prev_line=$(grep -B1 "^####" "$file" | head -1)
            if ! echo "$prev_line" | grep -q "^###"; then
              echo "‚ö†Ô∏è  Warning: Heading hierarchy issue in $file: $heading"
            fi
          fi
        done
        
        echo "‚úÖ Markdown formatting validation completed"

  check-documentation-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Check documentation coverage (key sections)
      run: |
        echo "üìä Checking feature documentation coverage..."
        
        # Verify key section files exist; ignore docs/archive
        required_files=(
          "docs/00-Overview/vision.md"
          "docs/01-Getting-Started/getting-started.md"
          "docs/02-Architecture/architecture.md"
          "docs/03-Frontend/frontend-guide.md"
          "docs/04-Backend/api-reference.md"
          "docs/06-Guides/development-guide.md"
          "docs/07-Standards/development-standards.md"
          "docs/08-Contribution/contributing-guide.md"
          "docs/09-Reports-and-History/project-status.md"
        )
        missing=0
        for f in "${required_files[@]}"; do
          if [ ! -f "$f" ]; then
            echo "‚ö†Ô∏è  Warning: Missing required documentation file: $f"
            missing=$((missing+1))
          fi
        done
        
        if [ $missing -gt 0 ]; then
          echo "‚ÑπÔ∏è  Some documentation files are missing; please review."
        fi
        
        echo "‚úÖ Documentation coverage check completed"